version: "2"

volumes:
  postgresdb:
  redisdb:
  uploads:

services:
  cartodb-postgis:
    container_name: cartodb-postgis
    build:
      context: postgis
    volumes:
      - postgresdb:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
  cartodb-redis:
    container_name: cartodb-redis
    build:
      context: redis
    volumes:
      - redisdb:/var/lib/redis
  cartodb-sqlapi:
    depends_on:
      - cartodb-postgis
      - cartodb-redis
    container_name: cartodb-sqlapi
    build:
      context: sqlapi
    command: $ENVIRONMENT.js.example
    environment:
      - ENVIRONMENT
  cartodb-mapsapi:
    depends_on:
      - cartodb-postgis
      - cartodb-redis
    container_name: cartodb-mapsapi
    build:
      context: mapsapi
    command: $ENVIRONMENT.js.example
    environment:
      - PUBLIC_HOST
      - PUBLIC_PORT
      - ENVIRONMENT
  cartodb-editor:
    image: cartodb-editor
    depends_on:
      - cartodb-postgis
      - cartodb-redis
      - cartodb-mapsapi
      - cartodb-sqlapi
    container_name: cartodb-editor
    build:
      context: editor
      args:
        - RAILS_ENV=$ENVIRONMENT
    volumes:
      - uploads:/cartodb/public/uploads
      - ./migrated:/migrated
    environment:
      - PUBLIC_HOST
      - PUBLIC_PORT
      - DEFAULT_USER
      - DEFAULT_PASSWORD
  cartodb-resque:
    image: cartodb-editor
    depends_on:
      - cartodb-postgis
      - cartodb-redis
      - cartodb-mapsapi
      - cartodb-sqlapi
    container_name: cartodb-resque
    environment:
      - START_RESQUE_ONLY=1
      - PUBLIC_HOST
      - PUBLIC_PORT
      - DEFAULT_USER
      - DEFAULT_PASSWORD
      - ENVIRONMENT
    volumes_from:
      - cartodb-editor
  cartodb-router:
    depends_on:
      - cartodb-mapsapi
      - cartodb-sqlapi
      - cartodb-editor
    container_name: cartodb-router
    build:
      context: router
      args:
        - PUBLIC_HOST=$PUBLIC_HOST
        - CERTS_PATH=$CERTS_PATH
    ports:
      - "80:80"
      - "443:443"
    environment:
      - PUBLIC_HOST
      - CERTS_PATH
    volumes:
      # to run locally but in production use /docker-volumes/... (see commented section below):
      - ./certs/dh-param/dhparam-2048.pem:/etc/letsencrypt/live/dhparam-2048.pem
      - ./certs/live/cartodb.spatial-labs.com/fullchain.pem:/etc/letsencrypt/live/cartodb.spatial-labs.com/fullchain.pem
      - ./certs/live/cartodb.spatial-labs.com/privkey.pem:/etc/letsencrypt/live/cartodb.spatial-labs.com/privkey.pem
      # for certbot challenges
      - ./certs/letsencrypt:/data/letsencrypt
      # in production use /docker-volumes/...
      # - ./router/cartodb.nginx.proxy.conf:/etc/nginx/conf.d/default.conf
      # - ./production-site:/usr/share/nginx/html
      # - ./dh-param/dhparam-2048.pem:/etc/ssl/certs/dhparam-2048.pem
      # - /docker-volumes/etc/letsencrypt/live/cartodb.spatial-labs.com/fullchain.pem:/etc/letsencrypt/live/cartodb.spatial-labs.com/fullchain.pem
      # - /docker-volumes/etc/letsencrypt/live/cartodb.spatial-labs.com/privkey.pem:/etc/letsencrypt/live/cartodb.spatial-labs.com/privkey.pem
      # #for certbot challenges
      # - /docker-volumes/data/letsencrypt:/data/letsencrypt
